name: Reusable promote to PROD workflow

on: 
  workflow_call:
    inputs: 
      version:
        description: 'Version to promote (ex: v1.0.3)'
        type: string
        required: true
    secrets:
      QUAY_USER:
        required: true
      QUAY_PASSWORD:
        required: true
      GCR_CREDENTIALS:
        required: true
jobs:
  promote:
    name: Promote to PROD
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login Docker registry (Quay)
        uses: docker/login-action@v2.1.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }} # Use org secrets for this
          password: ${{ secrets.QUAY_PASSWORD }} # Use org secrets for this
      - name: Login backup Docker registry (GCR)
        uses: docker/login-action@v2.1.0
        with:
          registry: us.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_CREDENTIALS }} # Use org secrets for this
      - name: Setup
        id: setup
        run: |-
          echo "promotedTag=prod-${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "uatImage=quay.io/adoreme/${{ github.event.repository.name }}:${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "quayProdImage=quay.io/adoreme/${{ github.event.repository.name }}:prod-${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "gcrProdImage=us.gcr.io/am-production-268015/${{ github.event.repository.name }}:prod-${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
      - name: Pull image from Quay
        run: docker pull ${{ steps.setup.outputs.uatImage }}
      - name: Tag image for Quay and Push
        run: |-
          docker tag ${{ steps.setup.outputs.uatImage }} ${{ steps.setup.outputs.quayProdImage }}
          docker push ${{ steps.setup.outputs.quayProdImage }}
      - name: Tag image for GCR and Push
        run: |-
          docker tag ${{ steps.setup.outputs.uatImage }} ${{ steps.setup.outputs.gcrProdImage }}
          docker push ${{ steps.setup.outputs.gcrProdImage }}
      - name: Get release
        id: get-release
        uses: cardinalby/git-get-release-action@1.2.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.event.inputs.version }}
      - name: Update release
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ steps.get-release.outputs.id }}
          name: ${{ steps.setup.outputs.promotedTag }}
          replacename: true
      - name: 'Summarize with Docker image Success'
        run: |
          echo "Version `${{ github.event.inputs.version }}` promoted to PROD as `${{ steps.setup.outputs.promotedTag }}`" >> $GITHUB_STEP_SUMMARY
